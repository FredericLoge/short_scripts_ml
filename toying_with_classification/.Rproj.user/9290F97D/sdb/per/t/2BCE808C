{
    "collab_server" : "",
    "contents" : "# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n#\n#                               Descriptive Analysis of IRIS dataset\n#\n# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n\n# dataset description\nstr(iris)\n\n# the database contains the following attributes: \n# 1) sepal length in cm\n# 2) sepal width in cm\n# 3) petal length in cm\n# 4) petal width in cm \n# 5) species: Setosa/Versicolour/Virginica\n\n# this toy dataset is used for two main tasks\n# A) Learning the relationship between Species and Physical attributes\n# B) Learning the relationship amongst physical attributes\n\n# visualize bi-plots with points colored by species\ncolor_vector <- c('black', 'blue', 'orange')\nplot(iris[,-5], col = color_vector[iris[,5]], pch = 20, \n     main = 'Bi-plots, species-colored (legend at bottom right)')\nlegend(legend = levels(iris[,5]), col = color_vector,\n       x = 1 - 0.12, y = 0 + 0.25, pch = 20, xpd = TRUE, border = NA, bg = 'yellow', box.col = NA)\n\n# note that the setosa species has very different physical\n# characteristics compared to the two other, versicolor and\n# virginica, which are much more entangled.\n\n# let us build a classifier to identify versicolor VS virginica.\n\n# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n#\n#                                 Classifiying versicolor VS virginica\n#\n# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n\nrequire(MASS)\nrequire(class)\n\n# extract iris of types versicolor and virginica\niris_v <- iris[iris$Species!='setosa',]\n\n# the data is class uniform\ntable(iris_v$Species)\n\n# refactoring\niris_v$Target <- factor(x = as.character(iris_v$Species), levels = c('versicolor', 'virginica'))\n\n# visualize bi-plots with points colored by species\ncolor_vector <- c('blue', 'orange')\nplot(iris_v[,1:4], col = color_vector[iris_v$Target], pch = 20, \n     main = 'Bi-plots, species-colored (legend at bottom right)')\nlegend(legend = levels(iris_v$Target), col = color_vector,\n       x = 1 - 0.12, y = 0 + 0.25, pch = 20, xpd = TRUE, border = NA, bg = 'yellow', box.col = NA)\n\n# randomized train-test split\nset.seed(375)\niris_v <- iris_v[sample(1:nrow(iris_v)),]\nindex_train <- 1:floor(nrow(iris_v)/2)\niris_v_train <- iris_v[index_train,]\niris_v_test <- iris_v[-index_train,]\n\n# logistic regression (LR)\nm_logreg <- glm(formula = Target ~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width, data = iris_v_train, family = binomial(link = 'logit'))\nsummary(m_logreg)\nm_logreg_prob <- predict(object = m_logreg, newdata = iris_v_test, type = 'response')\nm_logreg_pred <- factor(x = (as.numeric(m_logreg_prob) < 0.5), \n                        levels = c(TRUE, FALSE), labels = levels(iris_v_train$Target))\n\n# LDA (MASS::lda())\nm_lda <- lda(formula = Target ~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width, data = iris_v_train)\nm_lda\nm_lda_prob <- predict(object = m_lda, newdata = iris_v_test)$posterior[,2] \nm_lda_pred <- factor(x = (as.numeric(m_lda_prob) < 0.5), \n                        levels = c(TRUE, FALSE), labels = levels(iris_v_train$Target))\n\n# knn-1 (class::knn1())\nm_knn1_pred <- knn1(train = iris_v_train[,1:4], test = iris_v_test[,1:4], cl = iris_v_train$Target)\n\n# knn-5 (class::knn())\nm_knn5_pred <- knn(train = iris_v_train[,1:4], test = iris_v_test[,1:4], cl = iris_v_train$Target, k = 5)\n\n# compiling predictions and printing confusion matrices\nm_pred <- list(m_logreg_pred, m_lda_pred, m_knn1_pred, m_knn5_pred)\nlapply(1:4, function(i){\n  table('pred' = m_pred[[i]], 'target' = iris_v_test$Target)\n})\n\n# we observe that all the models work fine on this dataset example.\n\n# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n#\n#         Using unsupervised approach to help with classification of Versicolor VS virginica\n#\n# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n\n# here, we do not expect a much better performance of the classification task, since it is already pretty\n# easily done with logistic regression. Yet, it is interesting to use PCA here because all the covariates\n# are pretty much correlated, so it is interesting to create uncorrelated variates.\n\n# PCA\nm_pca <- princomp(iris_v_train[,1:4])\nsummary(m_pca) # 85% variance in the first dimension -> high correlation to exploit\n\n# reconstructing principal component i:\ni <- 1\nm_pca$scores[,i]\nscale(as.matrix(iris_v_train[,1:4]), scale = FALSE, center = TRUE) %*% m_pca$loadings[,i]\n\n# adding Principal components to both datasets\nfor(i in 1:4){\n  temp <- scale(as.matrix(iris_v_train[,1:4]), scale = FALSE, center = TRUE) %*% m_pca$loadings[,i]\n  eval(parse(text = paste0(\"iris_v_train$Princomp\", i, \" <- temp\")))\n  temp <- scale(as.matrix(iris_v_test[,1:4]), scale = FALSE, center = TRUE) %*% m_pca$loadings[,i]\n  eval(parse(text = paste0(\"iris_v_test$Princomp\", i, \" <- temp\")))\n}\n\n# logistic regression on principal component found\nm_logreg_pca <- glm(formula = Target ~ Princomp1 + Princomp2 + Princomp3 + Princomp4, data = iris_v_train, family = binomial(link = 'logit'))\nsummary(m_logreg_pca)\nm_logreg_pca_prob <- predict(object = m_logreg_pca, newdata = iris_v_test, type = 'response')\nm_logreg_pca_pred <- factor(x = (as.numeric(m_logreg_pca_prob) < 0.5), \n                        levels = c(TRUE, FALSE), labels = levels(iris_v_train$Target))\n\n# confusion matrix for the logistic regression model\ntable('pred' = m_logreg_pca_pred, 'target' = iris_v_test$Target)\n\n# we went from 0% error rate to 14% error rate. Even with keeping all the principal components we do quite worse.\n# this is a show for the fact that by combining the different variates, we lost information relevant to the link between\n# the target and the feature space!\n",
    "created" : 1533026635960.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "261707324",
    "id" : "2BCE808C",
    "lastKnownWriteTime" : 1533036151,
    "last_content_update" : 1533036151020,
    "path" : "~/Documents/singlecode/nour_exed/iris_dataset.R",
    "project_path" : "iris_dataset.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}